---
# CloudFormation YAML template for a dev environment with an EC2 instance for DDoS simulation

Parameters:
  # Allow user to specify instance types for Attacker and Protected instances
  AttackerInstanceType:
    Type: String
    Default: t2.micro
    Description: "Instance type for the DDoS Attacker"
  ProtectedInstanceType:
    Type: String
    Default: t2.micro
    Description: "Instance type for the Protected Server"

Resources:
  # Create the Attacker instance
  AttackerInstance:
    Type: "AWS::EC2::Instance"
    Properties:
      ImageId: ami-0c55b159cbfafe1f0
      InstanceType: !Ref AttackerInstanceType
      KeyName: myKey
      SecurityGroupIds:
        - !Ref AttackerSG
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          echo "Starting DDoS simulation on ${HOSTNAME}"
          sudo apt-get update
          sudo apt-get install -y hping3
          sudo hping3 -S -p 80 -c 10000 -i u10000 ${ProtectedPrivateIP}
  # Create the Protected instance
  ProtectedInstance:
    Type: "AWS::EC2::Instance"
    Properties:
      ImageId: ami-0c55b159cbfafe1f0
      InstanceType: !Ref ProtectedInstanceType
      KeyName: myKey
      SecurityGroupIds:
        - !Ref ProtectedSG
  # Create security groups for the instances
  AttackerSG:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "Security group for the DDoS Attacker"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: "0.0.0.0/0"
      SecurityGroupEgress:
        - IpProtocol: all
          CidrIp: "0.0.0.0/0"
  ProtectedSG:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "Security group for the Protected Server"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: "0.0.0.0/0"
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: "0.0.0.0/0"
      SecurityGroupEgress:
        - IpProtocol: all
          CidrIp: "0.0.0.0/0"

  # Attach the security groups to the instances
  AttackerInstanceSG:
    Type: "AWS::EC2::InstanceSecurityGroup"
    Properties:
      InstanceId: !Ref AttackerInstance
      GroupSet:
        - !Ref AttackerSG
  ProtectedInstanceSG:
    Type: "AWS::EC2::InstanceSecurityGroup"
    Properties:
      InstanceId: !Ref ProtectedInstance
      GroupSet:
        - !Ref ProtectedSG

  # Create a parameter store parameter to hold the Private IP of the Protected instance
  ProtectedPrivateIPParameter:
    Type: "AWS::SSM::Parameter"
    Properties:
      Type: "String"
      Description: "Private IP of the Protected instance"
      Name: "/protected-instance/private-ip"
      Value: !GetAtt ProtectedInstance.PrivateIp

Outputs:
  # Output any relevant information for the user, such as instance IDs, IP addresses, etc.
  AttackerInstanceID:
    Value: !Ref AttackerInstance
    Description: "Instance ID for the DDoS Attacker"
  ProtectedInstanceID:
    Value: !Ref ProtectedInstance
    Description: "Instance ID for the Protected Server"
  AttackerPublicIP:
    Value: !GetAtt AttackerInstance.PublicIp
    Description: "Public IP of the Attacker Instance"
  ProtectedPublicIP:
    Value: !GetAtt ProtectedInstance.PublicIp
    Description: "Public IP of the Protected Instance"
